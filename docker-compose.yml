#version: "3.4"
#
services:

  build:
    env_file:
      - .env
    container_name: ${APP_CONTAINER_NAME}
    build: 
      context: .
      dockerfile: gemp-module/docker/gemp_app.Dockerfile
    image: gemp_app
    expose:
      - "80"
      - "8080"
    #restart: always
    ports:
        # target means in the container
      - target: 80
        # published is what's on the host machine
        published: "${APP_PORT}"
        #These are the ports used for remote debugging the JRE
      - target: 8000
        published: 8052
    volumes:
       - type: bind
         source: gemp-module
         target: /etc/gemp-module
       - type: bind
         source: logs
         target: /logs
       - type: bind
         source: replay
         target: /replay
       - type: bind
         source: .
         target: /gemp-src
    networks:
      gemp_net_1:
        ipv4_address: ${APP_IP}
    tty: true
    command: java -jar -agentlib:jdwp=transport=dt_socket,address=*:8000,server=y,suspend=n -Dlog4j2.configurationFile=/src/gemp-module/gemp-stccg-client/target/log4j2.xml /src/gemp-module/gemp-stccg-client/target/web.jar &

  db:
    env_file:
      - .env
    container_name: ${DB_CONTAINER_NAME}
    build: 
      context: .
      dockerfile: gemp-module/docker/gemp_db.Dockerfile
    image: gemp_db
    ports:
        # target means in the container
      - target: 3306
        # published is what's on the host machine
        published: "${DB_PORT}"
    restart: always
    volumes:
       - type: bind
         source: database
         target: /var/lib/mysql
    networks:
      gemp_net_1:
        ipv4_address: ${DB_IP}


networks:
  gemp_net_1:
    ipam:
      driver: default
      config:
        - subnet: 172.28.1.0/24
    attachable: true